{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/page.js","components/score.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","guessCard","id","alt","name","src","image","location","Wrapper","children","styles","font","fontFamily","height","Page","Object","assign","style","card","heading","background","minHeight","lineHeight","fontSize","color","padding","content","topScores","float","Score","score","topScore","App","state","friends","spiders","guesses","reOrganize","newOrder","newFriendsOrder","i","rand","Math","floor","random","includes","push","console","log","_this","setState","deleteFriend","filter","friend","length","box","width","position","marginLeft","fontTitle","fontsize","fontWeight","_this2","this","page","components_Wrapper","map","item","components_FriendCard","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.71b7952e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\" onClick={() => props.guessCard(props.id)}>\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Earth:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nconst styles = {\n    font: {\n        fontFamily: 'Coming Soon ,cursive',\n        height: \"100px\"\n    }\n}\n\nfunction Page(props) {\n  return <div className=\"Page\" style={styles.font} {...props}>{props.children}</div>;\n}\n\nexport default Page;","import React from \"react\";\n\nconst styles = {\n    card: {\n    },\n    heading: {\n      background: \"#3f51b5\",\n      minHeight: 50,\n      lineHeight: 3.5,\n      fontSize: \"1.2rem\",\n      color: \"white\",\n      padding: \"0 20px\",\n      fontFamily: 'Coming Soon ,cursive'\n    },\n    content: {\n      padding: 20\n    },\n    topScores: {\n        float: \"right\",\n        fontFamily: 'Coming Soon ,cursive'\n    },\n    font: {\n        fontFamily: 'Coming Soon ,cursive'\n    }\n  };\n\nfunction Score(props) {\n  return <div className=\"score\" style={styles.heading}>\n     Score: {props.score} <div style={styles.topScores}>All-Time-TopScore= {props.topScore} </div>\n</div>\n}\n\nexport default Score;","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Page from \"./components/page\";\nimport spiders from \"./friends.json\";\nimport Score from \"./components/score\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  state = {\n    friends: spiders,\n    guesses: [],\n    score: 0,\n    topScore: 0\n  }\n\n  reOrganize = () => {\n    const newOrder = []\n    const newFriendsOrder = []\n    let i = 0\n    while(i<12){\n      let rand = Math.floor(Math.random()*12);\n      if(!newOrder.includes(rand)){\n        newOrder.push(rand);\n        newFriendsOrder[i] = spiders[rand];\n        i++;\n        console.log(newOrder); \n      };\n    };\n    this.setState({friends: newFriendsOrder})\n  }\n\n  deleteFriend = (id) => {\n    const friends = this.state.friends.filter((friend) => friend.id !== id );\n    this.setState({friends: friends});\n    console.log(friends)\n  }\n\n  guessCard = (id) => {\n    const correct = !this.state.guesses.includes(id);\n    if(correct){\n    this.state.guesses.push(id);\n    this.setState({score: this.state.guesses.length})\n    }else {\n      if(this.state.score>this.state.topScore){\n        this.setState({topScore: this.state.score})\n      };\n      this.setState({score: 0,\n        guesses: []});\n    }\n    this.reOrganize();\n  }\n\n  styles = {\n    box: {\n      fontFamily: 'Coming Soon ,cursive',\n      width: \"100%\",\n      position: \"relative\",\n      // height: \"1200px\"\n     },\n     font: {\n         fontFamily: 'Coming Soon ,cursive',\n         marginLeft: \"2rem\"\n     },\n     fontTitle: {\n         fontFamily: 'Coming Soon ,cursive',\n        fontsize: \"3rem\",\n        fontWeight: \"bolder\"\n     }\n  }\n\n  render(){\n  return (\n    <Page>\n      <h1 className=\"title\" style={this.styles.fontTitle}>SpiderVerse</h1>\n      <p style={this.styles.font}>Click on any spiderman you like!</p>\n      <p style={this.styles.font}>How many can you click without repeating?</p>\n      <div style={this.styles.box}>\n\n        <Score \n        score={this.state.score}\n        topScore={this.state.topScore}>\n        </Score>\n\n        <Wrapper>\n\n          {this.state.friends.map(item =>\n                <FriendCard\n                guessCard={this.guessCard}\n                id={item.id}\n                key={item.id}\n                name={item.name}\n                image={item.image}\n                location={item.location}\n                />\n            )}\n        </Wrapper>\n      </div>\n    </Page>\n  )};\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}